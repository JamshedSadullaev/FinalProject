{"version":3,"sources":["utils/auth.js","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/Menu/index.js","components/Item/index.js","components/Cart/index.js","pages/Home.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","pages/admin.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","console","log","adminStatus","getProfile","data","admin","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","description","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_ALL_PRODUCTS","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","useEffect","forEach","then","category","Menu","categoryData","Item","placeholder","onChange","target","role","removeFromCart","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","LOGIN","ADD_USER","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","id","Signup","addUser","firstName","lastName","Nav","ifAdmin","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Admin","productList","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.915a6913.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    if (token) {\n      return !!token && !this.isTokenExpired(token);\n    }else{\n      return false\n    }\n    \n  }\n\n  ifAdmin() {\n    const token = this.getToken();\n    if (token) {\n      console.log(token)\n      let adminStatus = this.getProfile(token)\n       console.log(adminStatus.data.admin)\n      return adminStatus.data.admin;\n  }else{\n    return false\n  }\n}\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    _id,\n    name,\n    description,\n    image,\n    price,\n    quantity,\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <span>{description}</span>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\nexport const QUERY_ALL_USERS = gql`\n{\n  users {\n    _id\n    firstName\n    lastName\n    email\n  }\n}\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n// import spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n              description={product.description}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>There are not products yet</h3>\n      )}\n      {/* {loading ? <img src={spinner} alt=\"loading\" /> : null} */}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction Menu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div className='centering'>\n      <h2 className='text'>HaJacketndmade Paintings On A </h2>\n      {/* {categories.map((item) => (\n        <button className='buttonsizing'\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))} */}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst Item = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            \n          >\n            <button onClick={() => removeFromCart(item)} className='light'>NO, THANK YOU!</button>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Item;","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../Item';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n         \n          OOPS! YOUR CART IS EMPTY...\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/Menu\";\nimport Cart from \"../components/Cart\";\n\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">Back to sign up</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">Please enter Valid login and password</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Log in</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction showNavigation() {\n\n  if (Auth.loggedIn()) {\n    return (\n      <ul className=\"flex-row\">\n        {Auth.ifAdmin() ?\n          <li className=\"mx-1\">\n            <Link to=\"/admin\">\n              Admin\n            </Link>\n          </li> : ''\n        }\n        {/* <li className=\"mx-1\">\n          <Link to=\"/orderHistory\">\n            Order History\n          </Link>\n        </li> */}\n\n        <li className=\"mx-1\">\n         \n          <a href=\"/\" onClick={() => Auth.logout()}>\n            Logout\n          </a>\n        </li>\n      </ul>\n    )\n  } else {\n    return (\n      <ul className=\"flex-row\">\n        {/* <li className=\"mx-1\">\n          <Link to=\"/\">\n            <div className=\"dropdown\">\n              <span>ART</span>\n              <div className=\"dropdown-content\">\n                <ul className=\"ulmove\">\n                <li className=\"linone\">\n                <Link to=\"/\">\n                  Prints\n                </Link>\n                </li>\n                </ul>\n              </div>\n            </div>\n          </Link>\n        </li> */}\n        <li className=\"mx-1\">\n          <Link to=\"/signup\">\n            SIGNUP\n          </Link>\n        </li>\n        <li className=\"mx-1\">\n          <Link to=\"/login\">\n            LOGIN\n          </Link>\n        </li>\n        <li className=\"mx-1\">\n          <Link to=\"/\">\n            HOME\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n}\n\n\nfunction Nav() {\n\n\n\n  return (\n    <header className=\"flex-row px-1 \">\n      <h1 className=\"namesize\">\n        <Link to=\"/\">\n          Art of Jackets\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ALL_PRODUCTS } from \"../utils/queries\";\n\nconst Admin = () => {\n    const {loading, data} = useQuery(QUERY_ALL_PRODUCTS);\n    const productList = data?.products || {}\n    console.log(productList)\n    if (loading) {\n        return <h2>loading</h2>\n    }\n    return (\n      <div className=\"container\">\n        admin page\n        {productList?.map((product) => {\n            return (\n                <div>\n            <h1>{product.name}</h1>\n\n                </div>\n            )\n        })}\n      </div>\n    );\n  };\n  \n  export default Admin;\n  ","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Auth from \"./utils/auth\";\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\n// import Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nimport Admin from './pages/admin';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const token = Auth.loggedIn() ? Auth.getProfile() : null\n  console.log(token)\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/admin\" \n                element={<Admin />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              {/* <Route \n                path=\"/success\" \n                element={<Success />} \n              /> */}\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              {/* <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              /> */}\n\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}